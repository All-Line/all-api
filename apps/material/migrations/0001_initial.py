# Generated by Django 3.2.16 on 2022-11-25 20:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

from apps.material.models.utils.file import material_file_directory_path


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("service", "0001_initial"),
        ("visual_structure", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CourseCategoryModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date modified",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Title"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Description"
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_categories",
                        to="visual_structure.colormodel",
                        verbose_name="Color",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course Category",
                "verbose_name_plural": "Course Categories",
            },
        ),
        migrations.CreateModel(
            name="CourseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date modified",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Title"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=material_file_directory_path,
                        verbose_name="Image",
                    ),
                ),
                (
                    "trailer",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=material_file_directory_path,
                        verbose_name="Trailer",
                    ),
                ),
                (
                    "is_paid",
                    models.BooleanField(default=True, verbose_name="Is Paid"),
                ),
                ("slug", models.SlugField(verbose_name="Slug")),
                (
                    "course_mode",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("progressive", "Progressive"),
                        ],
                        default="open",
                        help_text=(
                            "Open so you can access any class at any time. Progressive "
                            "so that you can only attend the class if you have seen the"
                            " previous one."
                        ),
                        max_length=255,
                        verbose_name="Course Mode",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="courses",
                        to="material.CourseCategoryModel",
                        verbose_name="Categories",
                    ),
                ),
                (
                    "color_palette",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="visual_structure.colorpalettemodel",
                        verbose_name="Color Palette",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="service.servicemodel",
                        verbose_name="Service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
        ),
        migrations.CreateModel(
            name="LessonModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date modified",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Title"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "thumbnail",
                    models.FileField(
                        upload_to=material_file_directory_path,
                        verbose_name="Thumbnail",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Order"
                    ),
                ),
                (
                    "lesson_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("text", "Text"),
                            ("audio", "Audio"),
                        ],
                        max_length=255,
                        verbose_name="Lesson Type",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        blank=True, null=True, verbose_name="Text"
                    ),
                ),
                (
                    "reading_time",
                    models.IntegerField(
                        blank=True,
                        help_text="In minutes",
                        null=True,
                        verbose_name="Reading Time",
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=material_file_directory_path,
                        verbose_name="Video",
                    ),
                ),
                (
                    "video_transcript",
                    models.TextField(
                        blank=True,
                        help_text=(
                            "This is for the accessibility of consumption to the "
                            "content, especially to page readers."
                        ),
                        null=True,
                        verbose_name="Video Transcription",
                    ),
                ),
                (
                    "audio",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=material_file_directory_path,
                        verbose_name="Audio",
                    ),
                ),
                (
                    "audio_transcript",
                    models.TextField(
                        blank=True,
                        help_text=(
                            "This is for the accessibility of consumption to the "
                            "content, especially to page readers."
                        ),
                        null=True,
                        verbose_name="Audio Transcription",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="material.coursemodel",
                        verbose_name="Course",
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        related_name="lessons_likes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Likes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson",
                "verbose_name_plural": "Lessons",
            },
        ),
        migrations.CreateModel(
            name="CommentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date modified",
                    ),
                ),
                ("text", models.TextField(verbose_name="Text")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="material.lessonmodel",
                        verbose_name="Lesson",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
            },
        ),
    ]
