# Generated by Django 3.2.16 on 2022-11-25 20:26

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("visual_structure", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ServiceModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date modified"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("slug", models.SlugField(verbose_name="Slug Field")),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                (
                    "smtp_email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="SMTP Email"
                    ),
                ),
                (
                    "confirmation_required",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "If it's true, users need to confirm their e-mails to use "
                            "the application."
                        ),
                        verbose_name="Confirmation Required",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "French"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("ja", "Japanese"),
                            ("pt-br", "Portuguese (Brazil)"),
                            ("pt-pt", "Portuguese (Portugal)"),
                            ("es", "Spanish"),
                        ],
                        max_length=255,
                        verbose_name="Language",
                    ),
                ),
                (
                    "terms",
                    models.TextField(
                        blank=True, null=True, verbose_name="Terms and Conditions"
                    ),
                ),
                (
                    "colors_palettes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="services",
                        to="visual_structure.ColorPaletteModel",
                        verbose_name="Colors Palettes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
            },
        ),
        migrations.CreateModel(
            name="ServiceCredentialConfigModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date modified"
                    ),
                ),
                (
                    "credential_config_type",
                    models.CharField(
                        choices=[("register", "Register"), ("login", "Login")],
                        max_length=255,
                        verbose_name="Credential Config Type",
                    ),
                ),
                ("field", models.CharField(max_length=255, verbose_name="Field")),
                ("label", models.CharField(max_length=255, verbose_name="Label")),
                (
                    "field_html_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("email", "Email"),
                            ("number", "Number"),
                            ("password", "Password"),
                            ("tel", "Tel"),
                            ("text", "Text"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="HTML Type",
                    ),
                ),
                (
                    "rule",
                    models.CharField(
                        blank=True,
                        help_text="A Regex to validate this field",
                        max_length=255,
                        null=True,
                        verbose_name="Field Rule",
                    ),
                ),
                (
                    "no_match_message",
                    models.CharField(
                        blank=True,
                        help_text=(
                            "The message that will be shown when the value entered in "
                            "this field does not match the field rule"
                        ),
                        max_length=255,
                        null=True,
                        verbose_name="Error Message",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credential_configs",
                        to="service.servicemodel",
                        verbose_name="Service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Credential Config",
                "verbose_name_plural": "Service Credential Configs",
            },
        ),
        migrations.CreateModel(
            name="ServiceEmailConfigModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "date_modified",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date modified"
                    ),
                ),
                (
                    "email_config_type",
                    models.CharField(
                        choices=[
                            ("register", "Register"),
                            ("reset_password", "Reset Password"),
                        ],
                        max_length=255,
                    ),
                ),
                ("email_html_template", models.TextField(verbose_name="HTML Template")),
                (
                    "email_subject",
                    models.CharField(max_length=255, verbose_name="Subject"),
                ),
                ("email_link", models.URLField(verbose_name="Link")),
                (
                    "email_link_expiration",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Link Time Expiration"
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_configs",
                        to="service.servicemodel",
                        verbose_name="Service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Email Config",
                "verbose_name_plural": "Service Email Configs",
                "unique_together": {("email_config_type", "service")},
            },
        ),
    ]
