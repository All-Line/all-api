# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Delivery to Homolog

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_HML_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_HML_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_HML_DB }}
  DB_HOST: ${{ secrets.POSTGRES_HML_HOST }}
  DB_PORT: ${{ secrets.POSTGRES_HML_PORT }}

  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD_HML }}

  APPLE_SECRET_KEY: ${{ secrets.APPLE_SECRET_KEY }}
  APPLE_SHARED_SECRET: ${{ secrets.APPLE_SHARED_SECRET }}

  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  ENVIRONMENT: hml

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Zappa Deploy to Homolog
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Building Environment
      run: |
        echo POSTGRES_USER=${{ env.POSTGRES_HML_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ env.POSTGRES_HML_PASSWORD }} >> .env
        echo POSTGRES_DB=${{ env.POSTGRES_HML_DB }} >> .env
        echo DB_HOST=${{ env.POSTGRES_HML_HOST }} >> .env
        echo DB_PORT=${{ env.POSTGRES_HML_PORT }} >> .env
        echo EMAIL_HOST_PASSWORD=${{ env.EMAIL_HOST_PASSWORD_HML }} >> .env
        echo APPLE_SECRET_KEY=${{ env.APPLE_SHARED_SECRET }} >> .env
        echo ENVIRONMENT=hml >> .env

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements/base.txt
        pip install -r requirements/tests.txt
    - name: Configure AWS
      run: |
        source venv/bin/activate
        aws configure set region us-east-2
        aws configure set output json
        aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}

    - name: Migrating the database
      run: |
        source venv/bin/activate
        zappa manage hml migrate

    - name: Deploying
      run: |
        source venv/bin/activate
        zappa update hml
